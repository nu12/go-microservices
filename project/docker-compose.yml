version: "3"

services:
  front:
    build:
      context: ./../front-end
      dockerfile: ./../front-end/Dockerfile
      args:
        - commit=dev
    restart: always
    environment:
      BACKEND_ADDRESS: "http://localhost:8081"
      COMMIT: docker-compose
    ports:
      - "8080:8080"
    deploy:
      mode: replicated
      replicas: 1
  broker:
    build:
      context: ./../broker-service
      dockerfile: ./../broker-service/Dockerfile
    restart: always
    ports:
      - "8081:8080"
    deploy:
      mode: replicated
      replicas: 1

  authentication:
    build:
      context: ./../authentication-service
      dockerfile: ./../authentication-service/Dockerfile
    restart: always
    ports:
      - "8082:8080"
    deploy:
      mode: replicated
      replicas: 1
    environment:
      DSN: "host=postgres port=5432 user=postgres  password=password dbname=users sslmode=disable timezone=UTC connect_timeout=5"

  postgres:
    build:
      context: ./../postgres
      dockerfile: ./../postgres/Dockerfile
    restart: always
    ports:
      - "5432:5432"
    deploy:
      mode: replicated
      replicas: 1
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=password
      - POSTGRES_DB=users
    volumes:
      - postgres:/var/lib/postgresql/data

  pgadmin:
    image: dpage/pgadmin4:6.14
    restart: always
    ports:
      - "9080:80"
    deploy:
      mode: replicated
      replicas: 1
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@example.com
      PGADMIN_DEFAULT_PASSWORD: password

  logger:
    build:
      context: ./../logger-service
      dockerfile: ./../logger-service/Dockerfile
    restart: always
    environment:
      MONGO_USER: admin
      MONGO_PASSWORD: password
      MONGO_URL: mongodb://mongo:27017
    deploy:
      mode: replicated
      replicas: 1
    
  mongo:
    image: mongo:4.2.16-bionic
    restart: always
    ports:
      - "27017:27017"
    deploy:
      mode: replicated
      replicas: 1
    environment:
      MONGO_INITDB_DATABASE: logs
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: password
    volumes:
      - mongo:/data/db

  mongo-express:
    image: mongo-express:1.0.0-alpha.4
    restart: always
    ports:
      - "9081:8081"
    deploy:
      mode: replicated
      replicas: 1
    environment:
      ME_CONFIG_MONGODB_URL: "mongodb://admin:password@mongo:27017/"

  mailer:
    build:
      context: ./../mailer-service
      dockerfile: ./../mailer-service/Dockerfile
    restart: always
    environment:
      MAIL_DOMAIN: localhost
      MAIL_HOST: mailhog
      MAIL_PORT: 1025
      MAIL_USERNAME: ""
      MAIL_PASSWORD: ""
      MAIL_ENCRYPTION: none
      MAIL_FROM_NAME: "John Smith"
      MAIL_FROM_ADDRESS: john.smith@example.com
    deploy:
      mode: replicated
      replicas: 1
  
  mailhog:
    image: 'mailhog/mailhog:v1.0.1'
    ports:
      - "1025:1025"
      - "8025:8025"

  listener:
    build:
      context: ./../listener-service
      dockerfile: ./../listener-service/Dockerfile
    restart: always
    deploy:
      mode: replicated
      replicas: 1

  rabbitmq:
    image: rabbitmq:3.9.14-alpine
    ports:
      - "5672:5672"
    deploy:
      mode: replicated
      replicas: 1
    volumes:
      - rabbitmq:/var/lib/rabbitmq

volumes:
  postgres:
  mongo:
  rabbitmq: